@page "/movies/review/view"
@using AwesomeBlazor.Components.Users
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using AwesomeBlazor.Models.Reviews

<Row>
    <Column ColumnSize="ColumnSize.IsFull">
        <EditForm OnSubmit="SubmitAsync" Model="model" EditContext="context">
            <DataAnnotationsValidator />
            <Validations Mode="ValidationMode.Auto" Model="@model" ValidateOnLoad="true" @ref="validations">
                <Steps SelectedStep="1" SelectedStepChanged="(s) => ShouldRenderFromParent = false">
                    <Items>
                        <Step Name="1" Color="Color.Primary">
                            <Marker>
                                <Icon Name="IconName.UserCircle" />
                            </Marker>
                            <Caption>
                                User
                            </Caption>
                        </Step>
                        <Step Name="2" Color="Color.Primary">Vote</Step>
                        <Step Name="3" Color="Color.Primary">
                            <Marker>
                                <Icon Name="IconName.Flag" />
                            </Marker>
                            <Caption>
                                Finish
                            </Caption>
                        </Step>
                    </Items>
                    <Content>
                        <StepPanel Name="1">
                            <AwUserInsert CurrentUser="model.User" ShouldRenderFromParent="ShouldRenderFromParent"></AwUserInsert>
                        </StepPanel>
                        <StepPanel Name="2">
                            <Validation>
                                <Field Horizontal="true">
                                    <FieldLabel ColumnSize="ColumnSize.Is2">Name</FieldLabel>
                                    <FieldBody ColumnSize="ColumnSize.Is10">
                                        <NumericEdit @bind-Value="@model.Vote" Placeholder="Some text value...">
                                            <ValidationError />
                                        </NumericEdit>
                                    </FieldBody>
                                </Field>
                            </Validation>
                        </StepPanel>
                        <StepPanel Name="3">
                            <Button Type="ButtonType.Submit" Color="Color.Primary">Submit</Button>
                        </StepPanel>
                    </Content>
                </Steps>
            </Validations>
        </EditForm>
    </Column>
</Row>

<Snackbar @ref="snackbar" Multiline="true" Location="SnackbarLocation.None">
    <SnackbarBody>
        @SnackBarContent
    </SnackbarBody>
</Snackbar>

@code {
    private Snackbar snackbar;
    private string SnackBarContent { get; set; }
    public ReviewInsertModel model = new ReviewInsertModel() { User = new Models.Users.UserInsertModel() };
    private EditContext context;
    private bool isValid;
    Validations validations;
    bool ShouldRenderFromParent;

    public void SubmitAsync(EditContext context)
    {
        if (validations.ValidateAll())
        {
            SnackBarContent += JsonSerializer.Serialize(context.Model, typeof(object), new JsonSerializerOptions { WriteIndented = true });
            snackbar.Show();
        }
        else
        {
            foreach (var item in context.GetValidationMessages())
            {
                SnackBarContent += item;
            }
            ShouldRenderFromParent = true;
        }
    }


}
