@page "/movies/review/view"
@using AwesomeBlazor.Components.Users
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using AwesomeBlazor.Models.Reviews

<Row>
    <Column ColumnSize="ColumnSize.IsFull">
        <EditForm OnSubmit="SubmitAsync" Model="model" EditContext="context">
            <DataAnnotationsValidator />
            <Validations Mode="ValidationMode.Auto" Model="@model" ValidateOnLoad="true" @ref="validations">
                <AwUserInsert @bind-CurrentUser="model.User"></AwUserInsert>

                <Validation>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Vote</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Slider TValue="int" Min="0" Max="5" Step="1" @bind-Value="@model.Vote">
                            </Slider>
                        </FieldBody>
                    </Field>
                </Validation>

                <Validation>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Confirm Value?</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <Switch TValue="bool" @bind-Checked="@model.ConfirmValue">
                                <ValidationError />
                            </Switch>
                        </FieldBody>
                    </Field>
                </Validation>

                <Button Type="ButtonType.Submit" Color="Color.Primary">Submit</Button>

            </Validations>
        </EditForm>
    </Column>
</Row>

<Snackbar @ref="snackbar" Multiline="true" Location="SnackbarLocation.None">
    <SnackbarBody>
        @SnackBarContent
    </SnackbarBody>
</Snackbar>

@code {
    private Snackbar snackbar;
    private string SnackBarContent { get; set; }
    public ReviewInsertModel model = new ReviewInsertModel();
    private EditContext context;
    private bool isValid;
    Validations validations;
    Steps steps;

    public void SubmitAsync(EditContext context)
    {
        if (validations.ValidateAll())
        {
            SnackBarContent += JsonSerializer.Serialize(context.Model, typeof(object), new JsonSerializerOptions { WriteIndented = true });
            snackbar.Show();
        }
        else
        {
            foreach (var item in context.GetValidationMessages())
            {
                SnackBarContent += item;
            }
            snackbar.Show();
        }
    }


}
