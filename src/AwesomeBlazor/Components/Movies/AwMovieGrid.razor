@using AwesomeBlazor.Languages
@using Blazorise.DataGrid;
@inject Microsoft.Extensions.Localization.IStringLocalizer<AwesomeLanguages> Loc

@if (PagedMovie.Results.Count > 0)
{
<DataGrid TItem="Movie" @ref="DataGrid"
          ReadData="ReadData"
          PageChanged="(e) => PagedMovie.Page = e.Page"
          PageSize="PagedMovie.Results.Count"
          Data="@PagedMovie.Results"
          CurrentPage="@PagedMovie.Page.Value"
          Responsive="true"
          ResizeMode="@DataGridResizeMode.Header"
          ShowPager="@showPager"
          ShowPageSizes="@showPageSizes"
          Filterable="@filterable"
          Sortable="@sortable"
          Editable="editable"
          EditMode="editMode"
          SortMode="sortMode"
          Striped="true"
          TotalItems="@PagedMovie.TotalResults"
          @bind-SelectedRow="@selectedMovie">
    <DataGridCommandColumn TItem="Movie" Width="170px">
        <NewCommandTemplate>
            <Button Color="Color.Success" Clicked="@context.Clicked">@context.LocalizationString</Button>
        </NewCommandTemplate>
        <EditCommandTemplate>
            <Button Color="Color.Primary" Clicked="@context.Clicked">@context.LocalizationString</Button>
        </EditCommandTemplate>
        <SaveCommandTemplate>
            <Button Color="Color.Primary" Clicked="@context.Clicked">@context.LocalizationString</Button>
        </SaveCommandTemplate>
        <DeleteCommandTemplate>
            <Button Color="Color.Danger" Clicked="@context.Clicked">@context.LocalizationString</Button>
        </DeleteCommandTemplate>
        <CancelCommandTemplate>
            <Button Color="Color.Secondary" Clicked="@context.Clicked">@context.LocalizationString</Button>
        </CancelCommandTemplate>
        <ClearFilterCommandTemplate>
            <Button Color="Color.Warning" Clicked="@context.Clicked">@context.LocalizationString</Button>
        </ClearFilterCommandTemplate>
    </DataGridCommandColumn>
    <DataGridColumn TItem="Movie" Field="@nameof(Movie.Id)" Caption="#" Sortable="false" />
    <DataGridColumn TItem="Movie" Field="@nameof(Movie.OriginalTitle)" Caption="Original Title" Editable="true" />
    <DataGridColumn TItem="Movie" Field="@nameof(Movie.OriginalLanguage)" Caption="@Loc["OriginalLanguage"]" Editable="true" />
    <DataGridSelectColumn TItem="Movie" Field="@nameof(Movie.GenreIds)" Caption="@Loc["Gendre"]">
        <DisplayTemplate>
            @{
                var gendre = (context as Movie)?.GenreIds;

                if (gendre != null)
                {
                    foreach (var g in gendre)
                    {
                        @($"{g}, ")
                    }
                }
            }
        </DisplayTemplate>
    </DataGridSelectColumn>
    <DataGridNumericColumn TItem="Movie" Field="@nameof(Movie.Popularity)" Caption="@Loc["Popularity"]" Editable="true" />
    <DataGridDateColumn TItem="Movie" Field="@nameof(Movie.ReleaseDate)" Caption="@Loc["ReleaseDate"]" Editable="true" Sortable="true" DisplayFormat="{0:yyyy-MM-dd}" />
    <DataGridNumericColumn TItem="Movie" Field="@nameof(Movie.VoteAverage)" Caption="@Loc["VoteAverage"]" Editable="true" />
</DataGrid>
}

@code { 

    [Parameter]
    public PagedResult<Movie> PagedMovie { get; set; } = new PagedResult<Movie>();

    [Parameter]
    public EventCallback<DataGridReadDataEventArgs<Movie>> ReadData { get; set; }

    public Movie selectedMovie;

    DataGridEditMode editMode = DataGridEditMode.Popup;
    DataGridSortMode sortMode = DataGridSortMode.Multiple;

    [Parameter]
    public DataGrid<Movie> DataGrid { get; set; }
    bool editable = true;
    bool sortable = true;
    bool filterable = true;
    bool showPager = true;
    bool showPageSizes = false;
}
